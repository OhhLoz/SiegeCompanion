swagger: '2.0'
info:
  description: This is the API we use at R6DB.com
  version: 2.0.0
  title: R6DB
  contact:
    email: info@r6db.com
host: r6db.com
basePath: /api/v2
tags:
  - name: listings
    description: Everything that lists players
  - name: detail
    description: Shows a single player
schemes:
  - https
paths:
  /players:
    get:
      tags:
        - listings
      summary: Find a Player by name
      description: >-
        this endpoint is used to find all players with an alias matching the
        name query. Some characters also match their substitutions (e.g i, l, 1)
      operationId: findPlayers
      parameters:
        - $ref: '#/parameters/CommonAppIdHeader'
        - name: name
          in: query
          description: Player you search for
          required: true
          type: string
        - name: platform
          in: query
          description: ps4, xbox or pc
          type: string
          required: true
        - name: exact
          in: query
          description: only search for exact matches
          type: boolean
          required: false
      responses:
        '200':
          description: unsorted list of matching palyers
          schema:
            type: array
            items:
              $ref: '#/definitions/SearchResult'
        '409':
          description: Bad request
  '/players/{id}':
    get:
      tags:
        - detail
      parameters:
        - $ref: '#/parameters/CommonAppIdHeader'
        - in: path
          name: id
          type: string
          description: the players id. do not pass the userId if you use the console api!
          required: true
      responses:
        '200':
          description: found player
          schema:
            $ref: '#/definitions/Player'
  /leaderboards:
    get:
      parameters:
        - $ref: '#/parameters/CommonAppIdHeader'
        - name: stat
          in: query
          description: board you want to see
          type: string
          required: true
          enum:
             - highest_skill_adjusted
             - apac_skill_adjusted
             - emea_skill_adjusted
             - ncsa_skill_adjusted
        - name: platform
          in: query
          description: ps4, xbox or pc
          type: string
          required: true
      tags:
        - listings
      responses:
        '200':
          description: ordered list of top players
          schema:
            type: array
            items:
              $ref: '#/definitions/LeaderboardEntry'
parameters:
  CommonAppIdHeader:
    name: x-app-id
    in: header
    description: Identifier for your app
    type: string
    required: true
    format: string
definitions:
  LeaderboardEntry:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      value:
        type: number
  Alias:
    type: object
    properties:
      name:
        type: string
        description: the actual alias
      hasOverlaps:
        type: boolean
        description: >-
          this indicates that the exact date is unclear and might overlap with
          other entries
      isMigrated:
        type: boolean
        description: indicates if alias is migrated from legacy system
  PlayTime:
    type: object
    properties:
      casual:
        type: number
        description: casual playtime in seconds
      ranked:
        type: number
        description: ranked playtime in seconds
      last_played:
        type: string
        description: when the players' playtime last changed
      id:
        type: string
        description: player id
  RankMini:
    type: object
    properties:
      mmr:
        type: number
      rank:
        type: integer
  RegionRank:
    type: object
    properties:
      abandons:
        type: integer
        description: abandons over the season
      losses:
        type: integer
      max_mmr:
        type: number
        description: >-
          the highest mmr achieved in the season. this is the same as mmr for
          seasons 1-3 (ubi-api is wrong here)
      max_rank:
        type: integer
      mmr:
        type: number
        description: the visible mmr
      rank:
        type: integer
        description: a number beterrn 0 (unranked) and 20 (diamond)
      skill_mean:
        type: number
        description: the matchmakings skill-rating for that player
      skill_stdev:
        type: number
        description: uncertainty
      wins:
        type: integer
  Rank:
    type: object
    properties:
      apac:
        $ref: '#/definitions/RegionRank'
      emea:
        $ref: '#/definitions/RegionRank'
      ncsa:
        $ref: '#/definitions/RegionRank'
      season:
        type: integer
      updated_at:
        type: string
        description: iso timestamp of when the rank was last updated
  GameModeStats:
    type: object
    properties:
      bestScore:
        type: integer
      lost:
        type: integer
      played:
        type: integer
      won:
        type: integer
  GeneralStats:
    type: object
    properties:
      deaths:
        type: integer
      kills:
        type: integer
      lost:
        type: integer
      timePlayed:
        type: integer
        description: playtime in seconds
      won:
        type: integer
  SearchResult:
    type: object
    properties:
      id:
        type: string
      userId:
        type: string
        description: the ubisoft user id. this is only returned on consoles
      level:
        type: number
      active:
        type: boolean
        description: indicates if this account was recently used
      aliases:
        type: array
        items:
          $ref: '#/definitions/Alias'
      lastPlayed:
        $ref: '#/definitions/PlayTime'
      ranks:
        type: object
        properties:
          emea:
            $ref: '#/definitions/RankMini'
          apac:
            $ref: '#/definitions/RankMini'
          ncsa:
            $ref: '#/definitions/RankMini'
  Player:
    type: object
    description: >-
      a player object. this contains the most current data we have on this
      account.
    properties:
      id:
        type: string
        description: the ubisoft profile id. we use this in basically all instances
      userId:
        type: string
        description: the ubisoft user id. this is only returned on consoles
      level:
        type: number
      active:
        type: boolean
        description: indicates if this account was recently used
      aliases:
        type: array
        items:
          $ref: '#/definitions/Alias'
      lastPlayed:
        $ref: '#/definitions/PlayTime'
      placements:
        type: object
        description: The players' ranking in the various regions
        properties:
          global:
            type: integer
          emea:
            type: integer
          apac:
            type: integer
          ncsa:
            type: integer
      rank:
        $ref: '#/definitions/Rank'
      seasonRanks:
        type: array
        description: rank stats for previous seasons
        items:
          $ref: '#/definitions/Rank'
      stats:
        type: object
        properties:
          bomb:
            $ref: '#/definitions/GameModeStats'
          casual:
            $ref: '#/definitions/GeneralStats'
          custom:
            type: object
            properties:
              timePlayed:
                type: integer
          general:
            type: object
            properties:
              assists:
                type: integer
              blindKills:
                type: integer
              bulletsFired:
                type: integer
              bulletsHit:
                type: integer
              dbno:
                type: integer
              dbnoAssists:
                type: integer
              deaths:
                type: integer
              gadgetsDestroyed:
                type: integer
              headshot:
                type: integer
              hostageDefense:
                type: integer
              hostageRescure:
                type: integer
              kills:
                type: integer
              lost:
                type: integer
              meleeKills:
                type: integer
              penetrationKills:
                type: integer
              played:
                type: integer
              rappelBreaches:
                type: integer
              revives:
                type: integer
              revivesDenied:
                type: integer
              serverAggression:
                type: integer
              serverDefender:
                type: integer
              serversHacked:
                type: integer
              suicides:
                type: integer
              timePlayed:
                type: integer
              won:
                type: integer
          hostage:
            $ref: '#/definitions/GameModeStats'
          operator:
            type: object
            properties:
              ash:
                $ref: '#/definitions/GeneralStats'
              bandit:
                $ref: '#/definitions/GeneralStats'
              blackbeard:
                $ref: '#/definitions/GeneralStats'
              blitz:
                $ref: '#/definitions/GeneralStats'
              buck:
                $ref: '#/definitions/GeneralStats'
              captiao:
                $ref: '#/definitions/GeneralStats'
              castle:
                $ref: '#/definitions/GeneralStats'
              caveira:
                $ref: '#/definitions/GeneralStats'
              doc:
                $ref: '#/definitions/GeneralStats'
              echo:
                $ref: '#/definitions/GeneralStats'
              frost:
                $ref: '#/definitions/GeneralStats'
              fuze:
                $ref: '#/definitions/GeneralStats'
              glaz:
                $ref: '#/definitions/GeneralStats'
              hibana:
                $ref: '#/definitions/GeneralStats'
              iq:
                $ref: '#/definitions/GeneralStats'
              jackal:
                $ref: '#/definitions/GeneralStats'
              jager:
                $ref: '#/definitions/GeneralStats'
              kapkan:
                $ref: '#/definitions/GeneralStats'
              mira:
                $ref: '#/definitions/GeneralStats'
              montagne:
                $ref: '#/definitions/GeneralStats'
              mute:
                $ref: '#/definitions/GeneralStats'
              pulse:
                $ref: '#/definitions/GeneralStats'
              rook:
                $ref: '#/definitions/GeneralStats'
              sledge:
                $ref: '#/definitions/GeneralStats'
              smoke:
                $ref: '#/definitions/GeneralStats'
              tachanka:
                $ref: '#/definitions/GeneralStats'
              thatcher:
                $ref: '#/definitions/GeneralStats'
              thermite:
                $ref: '#/definitions/GeneralStats'
              twitch:
                $ref: '#/definitions/GeneralStats'
              valkyrie:
                $ref: '#/definitions/GeneralStats'
          ranked:
            $ref: '#/definitions/GeneralStats'
          secure:
            $ref: '#/definitions/GameModeStats'
